
name: Deploy Jekyll site to Pages

on:
  push:
    branches: 
    - main

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:

  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@0a29871fe2b0200a17a4497bae54fe5df0d973aa # v1.115.3
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  # Post-processing (heh)
  newcheck:
    runs-on: ubuntu-latest
    name: Post-processing
    needs: deploy
    outputs:
      title: ${{ steps.store-title.outputs.data }}
      tags: ${{ steps.store-tags.outputs.data }}
      summary: ${{ steps.store-summary.outputs.data }}
      url: ${{ steps.store-url.outputs.data }}
      new-file: ${{ steps.store-new-file.outputs.data3 }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed files in _posts dir
        id: changed-files-specific
        uses: tj-actions/changed-files@v34
        with:
          files: |
            _posts/**

      - name: Echo if any new files added
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "Found new file:"
          echo "${{ steps.changed-files-specific.outputs.added_files }}"

      - name: Get new post metadata
        uses: mheap/markdown-meta-action@v1.0.1
        id: meta
        with:
          file: "${{ steps.changed-files-specific.outputs.added_files }}"

      - name: Store title
        id: store-title
        run: |
          echo "${{ steps.meta.output.title }}"
          echo "${{ steps.meta.outputs.title }}"
          echo "data=${{ steps.meta.outputs.title }}" >> $GITHUB_OUTPUT

      - name: Store tags
        id: store-tags
        run: echo "data=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT

      - name: Store summary
        id: store-summary
        run: echo "data=${{ steps.meta.outputs.summary }}" >> $GITHUB_OUTPUT

      - name: Test SED
        id: store-new-file
        run: |
          echo "Found new file:"
          data="${{ steps.changed-files-specific.outputs.added_files }}"
          data2=`echo $data | awk '{ print substr ($0, 19 ) }' | awk '{ print substr( $0, 1, length($0)-3 ) }'`
          echo "data3=$data2" >> $GITHUB_OUTPUT

  xpost:
    runs-on: ubuntu-latest
    needs: newcheck
    steps:
      - run: |
          echo "${{ needs.newcheck.outputs.title }}" 
          echo "${{ needs.newcheck.outputs.new-file }}"
          echo "${{ needs.newcheck.outputs.url }}"
